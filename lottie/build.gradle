plugins {
  id 'mirego.publish' version '1.0'
  id 'digital.wup.android-maven-publish' version '3.6.2'
}

apply plugin: 'com.android.library'

publishing {
  publications {
    mavenAar(MavenPublication) {
      from project.components.android
    }
  }
}

group "${GROUP}"

android {
  compileSdkVersion 27
  resourcePrefix 'lottie_'

  defaultConfig {
    minSdkVersion 16
    targetSdkVersion 27
    versionCode 100
    versionName "${version}"
  }

  lintOptions {
    abortOnError true
    textReport true
    textOutput 'stdout'
  }

  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_7
    targetCompatibility JavaVersion.VERSION_1_7
  }

  testOptions {
    unitTests {
      includeAndroidResources = true
    }
  }

  task androidJavadocs(type: Javadoc) {
    failOnError false
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
  }

  task androidJavadocsJar(type: Jar, dependsOn: androidJavadocs) {
    classifier = 'javadoc'
    from androidJavadocs.destinationDir
  }

  task androidSourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.sourceFiles
  }

  artifacts {
    archives androidSourcesJar
    archives androidJavadocsJar
  }
}

dependencies {
  implementation "com.android.support:appcompat-v7:$supportLibVersion"
  testImplementation "org.mockito:mockito-core:2.15.0"
  testImplementation 'junit:junit:4.12'
  testImplementation "org.robolectric:robolectric:3.5.1"
}

task javadoc(type: Javadoc) {
  source = android.sourceSets.main.java.srcDirs
  configurations.implementation.setCanBeResolved(true)
  classpath += project.files(android.getBootClasspath().join(File.pathSeparator)) + configurations.implementation
  failOnError false
}
